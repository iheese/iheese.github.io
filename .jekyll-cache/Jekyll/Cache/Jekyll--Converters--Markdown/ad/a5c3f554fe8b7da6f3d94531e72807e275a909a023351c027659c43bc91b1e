I"a<h2 id="mybatis">MyBatis</h2>

<ul>
  <li>SQL 명령어를 외부의 XML 파일이나 Annotation으로 분리하고 DB 연동 처리를 쉽게 도와주는 프레임워크이다.</li>
  <li>SqlSessionTemplate과 MapperFactoryBean을 이용하는 2가지 방법을 알아볼 것이다.</li>
</ul>

<p><br /></p>

<h2 id="mybatis-사용법">MyBatis 사용법</h2>
<ul>
  <li>maven 사용하지 않는다면 lib 폴더 아래 mybatis-x.x.x.jar,  mybatis-spring-x.x.x.jar 파일을 넣어주면 된다.</li>
  <li>maven 사용시, pom.xml에 아래 의존성을 추가해주면 된다.</li>
</ul>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;dependency&gt;</span>
  <span class="nt">&lt;groupId&gt;</span>org.mybatis<span class="nt">&lt;/groupId&gt;</span>
  <span class="nt">&lt;artifactId&gt;</span>mybatis<span class="nt">&lt;/artifactId&gt;</span>
  <span class="nt">&lt;version&gt;</span>x.x.x<span class="nt">&lt;/version&gt;</span>
<span class="nt">&lt;/dependency&gt;</span>

<span class="nt">&lt;dependency&gt;</span>
  <span class="nt">&lt;groupId&gt;</span>org.mybatis<span class="nt">&lt;/groupId&gt;</span>
  <span class="nt">&lt;artifactId&gt;</span>mybatis-spring<span class="nt">&lt;/artifactId&gt;</span>
  <span class="nt">&lt;version&gt;</span>x.x.x<span class="nt">&lt;/version&gt;</span>
<span class="nt">&lt;/dependency&gt;</span>
</code></pre></div></div>

<ul>
  <li>mybatis-spring은 MyBatis와 Spring의 연동을 위한 태그이다.</li>
</ul>

<p><br /></p>

<p><img src="/img/posts/spring/mybatis.jpg" alt="mybatis" /></p>

<p><br /></p>

<h3 id="sqlsessiontemplate을-이용한-방법">SqlSessionTemplate을 이용한 방법</h3>

<p>business-layer.xml(root-context.xml) 설정</p>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">&lt;!--생략--&gt;</span>

<span class="c">&lt;!-- DataSource --&gt;</span>
	<span class="nt">&lt;context:property-placeholder</span> <span class="na">location=</span><span class="s">"classpath:datasource.properties"</span><span class="nt">/&gt;</span>
	
	<span class="nt">&lt;bean</span> <span class="na">id=</span><span class="s">"dataSource"</span> <span class="na">class=</span><span class="s">"org.apache.commons.dbcp.BasicDataSource"</span>
	<span class="na">destroy-method=</span><span class="s">"close"</span><span class="nt">&gt;</span>
		<span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">"driverClassName"</span> <span class="na">value=</span><span class="s">"${jdbc.driverClassName}"</span><span class="nt">/&gt;</span>
		<span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">"url"</span> <span class="na">value=</span><span class="s">"${jdbc.url}"</span><span class="nt">/&gt;</span>
		<span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">"username"</span> <span class="na">value=</span><span class="s">"${jdbc.username}"</span><span class="nt">/&gt;</span>
		<span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">"password"</span> <span class="na">value=</span><span class="s">"${jdbc.password}"</span><span class="nt">/&gt;</span>
	<span class="nt">&lt;/bean&gt;</span>
	
	<span class="c">&lt;!-- Spring과 MyBATIS 연동 설정 --&gt;</span>
	<span class="nt">&lt;bean</span> <span class="na">id=</span><span class="s">"sqlSessionFactory"</span> <span class="na">class=</span><span class="s">"org.mybatis.spring.SqlSessionFactoryBean"</span><span class="nt">&gt;</span>
		<span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">"configLocation"</span> <span class="na">value=</span><span class="s">"classpath:sql-map-config.xml"</span><span class="nt">/&gt;</span>
		<span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">"dataSource"</span> <span class="na">ref=</span><span class="s">"dataSource"</span><span class="nt">/&gt;</span>
	<span class="nt">&lt;/bean&gt;</span>
	
	<span class="nt">&lt;bean</span> <span class="na">id=</span><span class="s">"sqlSessionTemplate"</span> <span class="na">class=</span><span class="s">"org.mybatis.spring.SqlSessionTemplate"</span><span class="nt">&gt;</span>
		<span class="nt">&lt;constructor-arg</span> <span class="na">ref=</span><span class="s">"sqlSessionFactory"</span><span class="nt">/&gt;</span>
	<span class="nt">&lt;/bean&gt;</span>

<span class="c">&lt;!--생략--&gt;</span>
</code></pre></div></div>
<ul>
  <li>SqlSessionTemplate은 MyBatis 쿼리문을 수행해주는 역할을 한다. (MyBatis와 Spring 연동 모듈의 핵심)</li>
  <li>setter injection으로 SqlSessionFactoryBean에 dataSource, sql-map-config 설정 파일을 주입해준다.</li>
  <li>SqlSessionFactoryBean을 생성자 주입하여 SqlSessionTemplate bean을 생성한다.</li>
</ul>

<p><br /></p>

<p>sql-map-config.xml 설정</p>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span>
<span class="cp">&lt;!DOCTYPE configuration
  PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-config.dtd"&gt;</span>
<span class="nt">&lt;configuration&gt;</span>
	<span class="nt">&lt;typeAliases&gt;</span>
		<span class="nt">&lt;typeAlias</span> <span class="na">type=</span><span class="s">"com.school.service.student.studentVO"</span> <span class="na">alias=</span><span class="s">"student"</span><span class="nt">/&gt;</span>
	<span class="nt">&lt;/typeAliases&gt;</span>
	
	<span class="nt">&lt;mappers&gt;</span>
		<span class="nt">&lt;mapper</span> <span class="na">resource=</span><span class="s">"mappings/student-mapping.xml"</span><span class="nt">/&gt;</span>
	<span class="nt">&lt;/mappers&gt;</span>
	
<span class="nt">&lt;/configuration&gt;</span>
</code></pre></div></div>

<ul>
  <li><code class="language-plaintext highlighter-rouge">&lt;typeAliases&gt;</code> 을 이용해 객체 별칭을 정하여 사용할 수 있다.</li>
  <li><code class="language-plaintext highlighter-rouge">&lt;mappers&gt;</code>을 통해 mapping 정보가 담긴 xml파일을 알려준다.</li>
</ul>

<p><br /></p>

<p>mappings/student-mapping.xml</p>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span>
<span class="cp">&lt;!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;</span>
<span class="nt">&lt;mapper</span> <span class="na">namespace=</span><span class="s">"StudentDAO"</span><span class="nt">&gt;</span>
	<span class="nt">&lt;resultMap</span> <span class="na">id=</span><span class="s">"student"</span> <span class="na">type=</span><span class="s">"student"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;id</span> <span class="na">property=</span><span class="s">"seq"</span> <span class="na">column=</span><span class="s">"SEQ"</span> <span class="nt">/&gt;</span>
        <span class="nt">&lt;result</span> <span class="na">property=</span><span class="s">"name"</span> <span class="na">column=</span><span class="s">"NAME"</span> <span class="nt">/&gt;</span>
        <span class="nt">&lt;result</span> <span class="na">property=</span><span class="s">"sex"</span> <span class="na">column=</span><span class="s">"SEX"</span> <span class="nt">/&gt;</span>
        <span class="nt">&lt;result</span> <span class="na">property=</span><span class="s">"role"</span> <span class="na">column=</span><span class="s">"ROLE"</span> <span class="nt">/&gt;</span>
    <span class="nt">&lt;/resultMap&gt;</span>

	<span class="nt">&lt;insert</span> <span class="na">id=</span><span class="s">"insertStudent"</span> <span class="nt">&gt;</span>
		 insert into student(seq, name, sex, role) values(#{seq}, #{name}, #{sex}, #{role})
	<span class="nt">&lt;/insert&gt;</span>
	
	<span class="nt">&lt;select</span> <span class="na">id=</span><span class="s">"getStudent"</span> <span class="na">resultMap=</span><span class="s">"student"</span><span class="nt">&gt;</span>
		<span class="cp">&lt;![CDATA[
		select * from student where id = #{seq}
		]]&gt;</span>
	<span class="nt">&lt;/select&gt;</span>
	
	<span class="nt">&lt;select</span> <span class="na">id=</span><span class="s">"getStudentList"</span> <span class="na">resultMap=</span><span class="s">"student"</span><span class="nt">&gt;</span>
		select * from student order by seq desc
	<span class="nt">&lt;/select&gt;</span>
<span class="nt">&lt;/mapper&gt;</span>

</code></pre></div></div>

<ul>
  <li><code class="language-plaintext highlighter-rouge">&lt;mapper id=""&gt;, &lt;insert id=""&gt;</code> id를 통해 mapper의 sql문을 호출할 수 있다.</li>
  <li>VO 속성명과 컬럼명이 다르면 위의 resultMap 태그로 정해줄 수 있다.</li>
  <li>sql문 마다 태그가 존재한다.(<code class="language-plaintext highlighter-rouge">&lt;insert&gt;, &lt;update&gt;, &lt;delete&gt;, &lt;select&gt;</code>)</li>
  <li><code class="language-plaintext highlighter-rouge">&lt;, &gt; ,&amp;</code> 을 사용한 sql문을 사용하려면 <code class="language-plaintext highlighter-rouge">&lt;![CDATA[ ]]&gt;</code> 로 감싸주면 된다.</li>
  <li>resultMap 선언시 참조한 이름으로 select 태그의 resultMap으로 리턴값을 정해줄 수 있다.</li>
  <li>resultType으로 리턴 타입을 정할 수 있는데 mapping하려는 클래스 경로, alias명, 타입명(ex: int, String 등)을 적어주면 된다.</li>
  <li>sql문 내 입력될 파라미터 값은 <code class="language-plaintext highlighter-rouge">#{}</code> 안에 적어주면된다. (JDBC의 ? 의 역할이다. )</li>
</ul>

<p><br /></p>

<p>StudentDAO.java</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nd">@Repository</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">StudentDAOMybatis</span> <span class="kd">implements</span> <span class="nc">StudentDAO</span><span class="o">{</span>
		
	<span class="nd">@Autowired</span>
	<span class="kd">private</span> <span class="nc">SqlSessionTemplate</span> <span class="n">sqlSession</span><span class="o">;</span>

	<span class="c1">// 학생 정보 등록</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">insertStudent</span><span class="o">(</span><span class="nc">StudentVO</span> <span class="n">vo</span><span class="o">)</span> <span class="o">{</span>
		<span class="n">sqlSession</span><span class="o">.</span><span class="na">insert</span><span class="o">(</span><span class="s">"StudentDAO.insertStudent"</span><span class="o">,</span><span class="n">vo</span><span class="o">);</span>
	<span class="o">}</span>
	
	<span class="c1">// 학생 상세 조회</span>
	<span class="kd">public</span> <span class="nc">StudentVO</span> <span class="nf">getStudent</span><span class="o">(</span><span class="nc">StudentVO</span> <span class="n">vo</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">return</span> <span class="o">(</span><span class="nc">StudentVO</span><span class="o">)</span> <span class="n">sqlSession</span><span class="o">.</span><span class="na">selectOne</span><span class="o">(</span><span class="s">"StudentDAO.getStudent"</span><span class="o">,</span><span class="n">vo</span><span class="o">);</span>
	<span class="o">}</span>
	
	<span class="c1">// 학생 목록 검색</span>
	<span class="kd">public</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">StudentVO</span><span class="o">&gt;</span> <span class="nf">getStudentList</span><span class="o">(</span><span class="nc">StudentVO</span> <span class="n">vo</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">return</span> <span class="n">sqlSession</span><span class="o">.</span><span class="na">selectList</span><span class="o">(</span><span class="s">"StudentDAO.getStudentList"</span><span class="o">,</span> <span class="n">vo</span><span class="o">);</span>
	<span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<ul>
  <li>SqlSessionTemplate의 insert(), delete(), update() 메소드가 각각 존재하여 sql문에 맞게 사용하면 된다.</li>
  <li>selectOne()은 객체 하나를 조회할 때 사용한다.</li>
  <li>selectList()은 객체 여러 개를 조회할 때 사용한다.</li>
</ul>

<p><br /></p>

<h3 id="mapperfactorybean을-이용한-방법">MapperFactoryBean을 이용한 방법</h3>

<ul>
  <li>MapperFactoryBean 방법은 DAO interface에 직접 이용하여 구현체를 만들지 않아도 사용할 수 있는 방법이다.</li>
</ul>

<p>business-layer.xml(root-context.xml) 설정</p>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code> 	<span class="c">&lt;!-- DataSource --&gt;</span>
	<span class="nt">&lt;context:property-placeholder</span>
		<span class="na">location=</span><span class="s">"classpath:datasource.properties"</span> <span class="nt">/&gt;</span>
	
	<span class="nt">&lt;bean</span> <span class="na">id=</span><span class="s">"dataSource"</span>
		<span class="na">class=</span><span class="s">"org.apache.commons.dbcp.BasicDataSource"</span> <span class="na">destroy-method=</span><span class="s">"close"</span><span class="nt">&gt;</span>
		<span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">"driverClassName"</span>
			<span class="na">value=</span><span class="s">"${jdbc.driverClassName}"</span> <span class="nt">/&gt;</span>
		<span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">"url"</span> <span class="na">value=</span><span class="s">"${jdbc.url}"</span> <span class="nt">/&gt;</span>
		<span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">"username"</span> <span class="na">value=</span><span class="s">"${jdbc.username}"</span> <span class="nt">/&gt;</span>
		<span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">"password"</span> <span class="na">value=</span><span class="s">"${jdbc.password}"</span> <span class="nt">/&gt;</span>
	<span class="nt">&lt;/bean&gt;</span>
    
	<span class="c">&lt;!-- Spring과 MyBATIS 연동 설정 --&gt;</span>
	<span class="nt">&lt;bean</span> <span class="na">id=</span><span class="s">"sqlSessionFactory"</span>
		<span class="na">class=</span><span class="s">"org.mybatis.spring.SqlSessionFactoryBean"</span><span class="nt">&gt;</span>
		<span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">"configLocation"</span>
			<span class="na">value=</span><span class="s">"classpath:sql-map-config.xml"</span> <span class="nt">/&gt;</span>
		<span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">"dataSource"</span> <span class="na">ref=</span><span class="s">"dataSource"</span> <span class="nt">/&gt;</span>
	<span class="nt">&lt;/bean&gt;</span>

	<span class="nt">&lt;bean</span> <span class="na">id=</span><span class="s">"sqlSessionTemplate"</span> <span class="na">class=</span><span class="s">"org.mybatis.spring.SqlSessionTemplate"</span><span class="nt">&gt;</span>
		<span class="nt">&lt;constructor-arg</span> <span class="na">ref=</span><span class="s">"sqlSessionFactory"</span> <span class="nt">/&gt;</span>
	<span class="nt">&lt;/bean&gt;</span>
    <span class="c">&lt;!--위에까지는 일치한다.--&gt;</span>
    
    <span class="nt">&lt;bean</span> <span class="na">id=</span><span class="s">"StudentDAO"</span>
		<span class="na">class=</span><span class="s">"org.mybatis.spring.mapper.MapperFactoryBean"</span><span class="nt">&gt;</span>
		<span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">"mapperInterface"</span>
			<span class="na">value=</span><span class="s">"com.school.service.student.studentDAO"</span> <span class="nt">/&gt;</span>
	    <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">"sqlSessionTemplate"</span> <span class="na">ref=</span><span class="s">"sqlSessionTemplate"</span><span class="nt">/&gt;</span>
	<span class="nt">&lt;/bean&gt;</span> 
</code></pre></div></div>

<ul>
  <li>MapperFactoryBean에 sqlSessionTemplate과 DAO interface를 setter 주입해준다.</li>
</ul>

<p><br /></p>

<p>StudentDAO.java</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">interface</span> <span class="nc">StudentDAO</span> <span class="o">{</span>
	
	<span class="c1">// 학생 등록</span>
	<span class="kt">void</span> <span class="nf">insertStudent</span><span class="o">(</span><span class="n">studentVO</span> <span class="n">vo</span><span class="o">);</span>

	<span class="c1">// 학생 상세 조회</span>
	<span class="n">studentVO</span> <span class="nf">getStudent</span><span class="o">(</span><span class="n">studentVO</span> <span class="n">vo</span><span class="o">);</span>

	<span class="c1">// 학생 목록 검색</span>
	<span class="nc">List</span><span class="o">&lt;</span><span class="n">studentVO</span><span class="o">&gt;</span> <span class="nf">getStudentList</span><span class="o">(</span><span class="n">studentVO</span> <span class="n">vo</span><span class="o">);</span>
<span class="o">}</span>
</code></pre></div></div>

<p><br /></p>

<p>sql-map-config.xml</p>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span>
<span class="cp">&lt;!DOCTYPE configuration
  PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-config.dtd"&gt;</span>
<span class="nt">&lt;configuration&gt;</span>
	<span class="nt">&lt;typeAliases&gt;</span>
		<span class="nt">&lt;typeAlias</span> <span class="na">type=</span><span class="s">"com.school.service.student.studentVO"</span> <span class="na">alias=</span><span class="s">"student"</span><span class="nt">/&gt;</span>
	<span class="nt">&lt;/typeAliases&gt;</span>
	
	<span class="nt">&lt;mappers&gt;</span>
		<span class="nt">&lt;mapper</span> <span class="na">resource=</span><span class="s">"mappings/student-mapping(mapper).xml"</span><span class="nt">/&gt;</span>
	<span class="nt">&lt;/mappers&gt;</span>
	
<span class="nt">&lt;/configuration&gt;</span>
</code></pre></div></div>

<p><br /></p>

<p>mappings/student-mapping(mapper).xml</p>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span>
<span class="cp">&lt;!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;</span>
<span class="nt">&lt;mapper</span> <span class="na">namespace=</span><span class="s">"StudentDAO"</span><span class="nt">&gt;</span>
	<span class="nt">&lt;resultMap</span> <span class="na">id=</span><span class="s">"student"</span> <span class="na">type=</span><span class="s">"student"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;id</span> <span class="na">property=</span><span class="s">"seq"</span> <span class="na">column=</span><span class="s">"SEQ"</span> <span class="nt">/&gt;</span>
        <span class="nt">&lt;result</span> <span class="na">property=</span><span class="s">"name"</span> <span class="na">column=</span><span class="s">"NAME"</span> <span class="nt">/&gt;</span>
        <span class="nt">&lt;result</span> <span class="na">property=</span><span class="s">"sex"</span> <span class="na">column=</span><span class="s">"SEX"</span> <span class="nt">/&gt;</span>
        <span class="nt">&lt;result</span> <span class="na">property=</span><span class="s">"role"</span> <span class="na">column=</span><span class="s">"ROLE"</span> <span class="nt">/&gt;</span>
    <span class="nt">&lt;/resultMap&gt;</span>

	<span class="nt">&lt;insert</span> <span class="na">id=</span><span class="s">"insertStudent"</span> <span class="nt">&gt;</span>
		 insert into student(seq, name, sex, role) values(#{seq}, #{name}, #{sex}, #{role})
	<span class="nt">&lt;/insert&gt;</span>
	
	<span class="nt">&lt;select</span> <span class="na">id=</span><span class="s">"getStudent"</span> <span class="na">resultMap=</span><span class="s">"student"</span><span class="nt">&gt;</span>
		<span class="cp">&lt;![CDATA[
		select * from student where id = #{seq}
		]]&gt;</span>
	<span class="nt">&lt;/select&gt;</span>
	
	<span class="nt">&lt;select</span> <span class="na">id=</span><span class="s">"getStudentList"</span> <span class="na">resultMap=</span><span class="s">"student"</span><span class="nt">&gt;</span>
		select * from student order by seq desc
	<span class="nt">&lt;/select&gt;</span>
<span class="nt">&lt;/mapper&gt;</span>

</code></pre></div></div>

<ul>
  <li>앞 내용과 거의 비슷하다.</li>
</ul>

<p><br /></p>

<p>StudentServiceImpl.java</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&lt;!--</span><span class="n">생략</span><span class="o">--&gt;</span>

<span class="nd">@Service</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">StudentServiceImpl</span> <span class="kd">implements</span> <span class="nc">StudentService</span> <span class="o">{</span>

	<span class="nd">@Autowired</span> 
	<span class="kd">private</span> <span class="nc">StudentDAO</span> <span class="n">studentDAO</span><span class="o">;</span>

	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">insertStudent</span><span class="o">(</span><span class="nc">StudentVO</span> <span class="n">vo</span><span class="o">)</span> <span class="o">{</span>
		<span class="n">studentDAO</span><span class="o">.</span><span class="na">insertStudent</span><span class="o">(</span><span class="n">vo</span><span class="o">);</span>
	<span class="o">}</span>

	<span class="kd">public</span> <span class="nc">StudentVO</span> <span class="nf">getStudent</span><span class="o">(</span><span class="nc">StudentVO</span> <span class="n">vo</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">return</span> <span class="n">studentDAO</span><span class="o">.</span><span class="na">getStudent</span><span class="o">(</span><span class="n">vo</span><span class="o">);</span>
	<span class="o">}</span>

	<span class="kd">public</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">StudentVO</span><span class="o">&gt;</span> <span class="nf">getStudentList</span><span class="o">(</span><span class="nc">StudentVO</span> <span class="n">vo</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">return</span> <span class="n">studentDAO</span><span class="o">.</span><span class="na">getStudentList</span><span class="o">(</span><span class="n">vo</span><span class="o">);</span>
	<span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<ul>
  <li>DAO를 구현할 때 사용하는 것이 아닌 Service구현체에서 바로 사용할 수 있다.</li>
  <li>DAO interface의 메소드명과 mapping 파일의 sql문의 id가 일치해야한다.</li>
  <li>business-layer.xml의 MapperFactoryBean id와 @Autowired 되는 DAO의 타입이 일치해야 한다.</li>
</ul>

<p><br /></p>

<h4 id="마무리">마무리</h4>

<ul>
  <li>SqlSessionTemplate
    <blockquote>
      <ul>
        <li>DAO interface의 구현체가 여러 개 필요할 때 더 효율적인 방법일 것 같다.</li>
      </ul>
    </blockquote>
  </li>
  <li>MapperFactoryBean
    <blockquote>
      <ul>
        <li>DAO interface를 직접 이용한다는 점이 유지 보수 측면에서 효율적이지 않지만 DAO 구현체가 1개보다 많이 필요하지 않은 로직에서는 좋은 방법일 것 같다.</li>
        <li>Java 소스 내 MyBatis에 의존적이지 않다.</li>
      </ul>
    </blockquote>
  </li>
</ul>

<p><br /></p>

<p>Reference:</p>
<ul>
  <li><a href="https://khj93.tistory.com/entry/MyBatis-MyBatis%EB%9E%80-%EA%B0%9C%EB%85%90-%EB%B0%8F-%ED%95%B5%EC%8B%AC-%EC%A0%95%EB%A6%AC">[MyBatis] MyBatis란? 개념 및 데이터구조, img_ 히진쓰의 서버사이드 기술 블로그</a></li>
  <li><a href="https://mybatis.org/spring/ko/sqlsession.html">mybatis-spring</a></li>
  <li><a href="https://mybatis.org/spring/ko/mappers.html">mybatis-spring, Mapper</a></li>
  <li><a href="https://bigfat.tistory.com/93?category=611606">[Spring] MyBatis 사용하기, MapperFactoryBean (게시판 구현)
_Bigfat</a></li>
</ul>

:ET