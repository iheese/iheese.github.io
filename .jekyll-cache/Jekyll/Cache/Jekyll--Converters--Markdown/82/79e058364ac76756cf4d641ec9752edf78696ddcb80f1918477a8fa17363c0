I"a<h2 id="2908-상수">2908 상수</h2>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.io.BufferedReader</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.InputStreamReader</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.StringTokenizer</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
		<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">IOException</span>  <span class="o">{</span>
			<span class="nc">BufferedReader</span> <span class="n">br</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="nc">InputStreamReader</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">));</span>
			
			<span class="nc">StringTokenizer</span> <span class="n">st</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringTokenizer</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">(),</span> <span class="s">" "</span><span class="o">);</span>
			
			<span class="kt">int</span> <span class="n">reversea</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
			<span class="kt">int</span> <span class="n">reverseb</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
			<span class="kt">int</span> <span class="n">a</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
			<span class="kt">int</span> <span class="n">b</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
			
			<span class="k">while</span><span class="o">(</span><span class="n">a</span><span class="o">!=</span><span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
				<span class="n">reversea</span><span class="o">=</span> <span class="n">reversea</span><span class="o">*</span><span class="mi">10</span><span class="o">;</span>
				<span class="n">reversea</span><span class="o">=</span> <span class="n">reversea</span><span class="o">+</span><span class="n">a</span><span class="o">%</span><span class="mi">10</span><span class="o">;</span>
				<span class="n">a</span><span class="o">=</span><span class="n">a</span><span class="o">/</span><span class="mi">10</span><span class="o">;</span>
			<span class="o">}</span>
			<span class="k">while</span><span class="o">(</span><span class="n">b</span><span class="o">!=</span><span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
				<span class="n">reverseb</span><span class="o">=</span> <span class="n">reverseb</span><span class="o">*</span><span class="mi">10</span><span class="o">;</span>
				<span class="n">reverseb</span><span class="o">=</span> <span class="n">reverseb</span><span class="o">+</span><span class="n">b</span><span class="o">%</span><span class="mi">10</span><span class="o">;</span>
				<span class="n">b</span><span class="o">=</span><span class="n">b</span><span class="o">/</span><span class="mi">10</span><span class="o">;</span>
			<span class="o">}</span>
			
			<span class="k">if</span><span class="o">(</span><span class="n">reversea</span><span class="o">&gt;</span><span class="n">reverseb</span><span class="o">)</span> <span class="o">{</span>
				<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">reversea</span><span class="o">);</span>
			<span class="o">}</span><span class="k">else</span> <span class="o">{</span>
				<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">reverseb</span><span class="o">);</span>
			<span class="o">}</span>
		<span class="o">}</span>
	<span class="o">}</span>	
</code></pre></div></div>

<ul>
  <li>숫자 뒤집는 방법 찾아서 응용해서 풀었던 문제</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.util.Scanner</span><span class="o">;</span>
 
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
		<span class="nc">Scanner</span> <span class="n">in</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Scanner</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
		<span class="kt">int</span> <span class="no">A</span> <span class="o">=</span> <span class="n">in</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
		<span class="kt">int</span> <span class="no">B</span> <span class="o">=</span> <span class="n">in</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
        <span class="n">in</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
		<span class="no">A</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="k">new</span> <span class="nc">StringBuilder</span><span class="o">().</span><span class="na">append</span><span class="o">(</span><span class="no">A</span><span class="o">).</span><span class="na">reverse</span><span class="o">().</span><span class="na">toString</span><span class="o">());</span>
		<span class="no">B</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="k">new</span> <span class="nc">StringBuilder</span><span class="o">().</span><span class="na">append</span><span class="o">(</span><span class="no">B</span><span class="o">).</span><span class="na">reverse</span><span class="o">().</span><span class="na">toString</span><span class="o">());</span>
		<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="no">A</span> <span class="o">&gt;</span> <span class="no">B</span> <span class="o">?</span> <span class="no">A</span> <span class="o">:</span> <span class="no">B</span><span class="o">);</span>

	<span class="o">}</span>
<span class="o">}</span>

</code></pre></div></div>

<ul>
  <li>StringBuilder에 reverse() 라는 좋은 기능이 있다.</li>
</ul>

<p><br /></p>
<h2 id="2941-크로아티아-알파벳">2941 크로아티아 알파벳</h2>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.io.BufferedReader</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.InputStreamReader</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
		<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">IOException</span>  <span class="o">{</span>
				<span class="nc">BufferedReader</span> <span class="n">br</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="nc">InputStreamReader</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">));</span>
				
				<span class="nc">String</span> <span class="n">str</span><span class="o">[]</span> <span class="o">=</span> <span class="o">{</span><span class="s">"c="</span><span class="o">,</span><span class="s">"c-"</span><span class="o">,</span><span class="s">"dz="</span><span class="o">,</span><span class="s">"d-"</span><span class="o">,</span><span class="s">"lj"</span><span class="o">,</span><span class="s">"nj"</span><span class="o">,</span><span class="s">"s="</span><span class="o">,</span><span class="s">"z="</span><span class="o">};</span>
				<span class="nc">String</span> <span class="n">s</span> <span class="o">=</span> <span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">();</span>
				<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">str</span><span class="o">.</span><span class="na">length</span><span class="o">;</span><span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
					<span class="k">if</span><span class="o">(</span><span class="n">s</span><span class="o">.</span><span class="na">contains</span><span class="o">(</span><span class="n">str</span><span class="o">[</span><span class="n">i</span><span class="o">]))</span> <span class="o">{</span>
						<span class="n">s</span><span class="o">=</span><span class="n">s</span><span class="o">.</span><span class="na">replace</span><span class="o">(</span><span class="n">str</span><span class="o">[</span><span class="n">i</span><span class="o">],</span><span class="s">"!"</span><span class="o">);</span>
					<span class="o">}</span>
				<span class="o">}</span>
				<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">s</span><span class="o">.</span><span class="na">length</span><span class="o">());</span>
		<span class="o">}</span>
	<span class="o">}</span>
</code></pre></div></div>

<ul>
  <li>다양한 방법을 고려했는데 이 방법이 가장 쉬웠다.</li>
  <li>String.contains([String]), String.replace([old],[new]) 함수의 적절한 예시인 듯하다.</li>
</ul>

<p><br /></p>

<h2 id="1316-그룹-단어-체커">1316 그룹 단어 체커</h2>

<ul>
  <li>문제 이해는 중간이었는데 구현하는 부분이 어려웠다.</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.io.BufferedReader</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.InputStreamReader</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
	<span class="kd">static</span> <span class="nc">BufferedReader</span> <span class="n">br</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="nc">InputStreamReader</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">));</span>

	
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">IOException</span> <span class="o">{</span>
		<span class="kt">int</span> <span class="n">count</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
		<span class="kt">int</span> <span class="no">N</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
		
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="no">N</span><span class="o">;</span><span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
			<span class="k">if</span><span class="o">(</span><span class="n">check</span><span class="o">()==</span><span class="kc">true</span><span class="o">)</span> <span class="o">{</span>
				<span class="n">count</span><span class="o">++;</span>
				<span class="o">}</span>
			<span class="o">}</span>
		<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">count</span><span class="o">);</span>
	
	<span class="o">}</span>
	<span class="c1">// 그룹 단어 체커 함수</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">boolean</span> <span class="nf">check</span><span class="o">()</span> <span class="kd">throws</span> <span class="nc">IOException</span> <span class="o">{</span>
		<span class="kt">boolean</span><span class="o">[]</span> <span class="n">check</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">boolean</span><span class="o">[</span><span class="mi">26</span><span class="o">];</span>
        <span class="c1">//기본으로 모두 false로 초기화된다. 알파벳 26개 boolean 초기화</span>
		<span class="kt">int</span> <span class="n">prev</span> <span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="c1">//이전 값 할당변수 초기화</span>
		<span class="nc">String</span> <span class="n">str</span> <span class="o">=</span> <span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">();</span>
		
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">str</span><span class="o">.</span><span class="na">length</span><span class="o">();</span><span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
			<span class="kt">int</span> <span class="n">now</span><span class="o">=</span><span class="n">str</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">);</span> <span class="c1">//내가 확인하고 있는 문자</span>
            
			<span class="k">if</span><span class="o">(</span><span class="n">prev</span><span class="o">!=</span><span class="n">now</span><span class="o">)</span> <span class="o">{</span> <span class="c1">//이전 문자와 현재 문자가 다르고</span>
				<span class="k">if</span><span class="o">(</span><span class="n">check</span><span class="o">[</span><span class="n">now</span><span class="o">-</span><span class="sc">'a'</span><span class="o">]==</span><span class="kc">false</span><span class="o">)</span> <span class="o">{</span>
                	<span class="c1">//현재 문자가 이전에 나왔던 문자가 아니면</span>
					<span class="n">check</span><span class="o">[</span><span class="n">now</span><span class="o">-</span><span class="sc">'a'</span><span class="o">]=</span><span class="kc">true</span><span class="o">;</span>
                    <span class="c1">// 해당 알파벳 존재한다고 알파벳배열 변경</span>
					<span class="n">prev</span><span class="o">=</span><span class="n">now</span><span class="o">;</span>
                    <span class="c1">// prev 변수도 다음 now 체크를 위해 앞으로</span>
				<span class="o">}</span><span class="k">else</span> <span class="o">{</span>
					<span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
                    <span class="c1">//now 이전에 나온 문자면 false 그룹단어 아님</span>
				<span class="o">}</span>
			<span class="o">}</span><span class="k">else</span> <span class="o">{</span> 
				<span class="k">continue</span><span class="o">;</span> <span class="c1">//이전 문자와 현재 문자가 같다</span>
                		  <span class="c1">// 뒤 문자도 같을 수 있으니 다음으로 넘어가보자</span>
			<span class="o">}</span>
		<span class="o">}</span>
		<span class="k">return</span> <span class="kc">true</span><span class="o">;</span>  <span class="c1">// 다 돌면 그룹단어 맞음</span>
	<span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<ul>
  <li>함수를 만들어서 푸는 방식이었다.</li>
  <li>BufferedReader을 static 함수에서 사용하기 위해 main 메소드 밖에서 static으로 호출해주어야 한다.
    <blockquote>
      <ul>
        <li>static 변수, 메소드는 main 메소드 실행되면서(런타임 시작하면서) 같이 생성되므로 static 메소드 안에 non-static 메소드는 들어갈 수 없다.</li>
        <li><a href="https://ddungi.github.io/java/2022/05/05/staticNonstatic/">참고 : 정적 메소드와 비정적 메소드에 관하여</a></li>
      </ul>
    </blockquote>
  </li>
</ul>

<p><br /></p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.io.BufferedReader</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.InputStreamReader</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>

	
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">IOException</span> <span class="o">{</span>
		<span class="nc">BufferedReader</span> <span class="n">br</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="nc">InputStreamReader</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">));</span>
		
		<span class="kt">int</span> <span class="n">n</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
		
		<span class="kt">int</span> <span class="n">cnt</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
		
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">n</span><span class="o">;</span><span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
			<span class="nc">String</span> <span class="n">s</span> <span class="o">=</span> <span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">();</span>
			
			<span class="kt">boolean</span> <span class="n">check</span><span class="o">[]</span> <span class="o">=</span><span class="k">new</span> <span class="kt">boolean</span><span class="o">[</span><span class="mi">26</span><span class="o">];</span>
            <span class="c1">//알파벳 boolean 배열 생성</span>
			<span class="kt">boolean</span> <span class="n">temp</span> <span class="o">=</span><span class="kc">true</span><span class="o">;</span>
			
			<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">j</span><span class="o">&lt;</span><span class="n">s</span><span class="o">.</span><span class="na">length</span><span class="o">();</span><span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
				<span class="kt">int</span> <span class="n">index</span> <span class="o">=</span><span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">j</span><span class="o">)-</span><span class="sc">'a'</span><span class="o">;</span>
				<span class="k">if</span><span class="o">(</span><span class="n">check</span><span class="o">[</span><span class="n">index</span><span class="o">])</span> <span class="o">{</span> <span class="c1">//이미 나온 알파벳이고</span>
					<span class="k">if</span><span class="o">(</span><span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">j</span><span class="o">)!=</span><span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">j</span><span class="o">-</span><span class="mi">1</span><span class="o">))</span> <span class="o">{</span>
                    <span class="c1">// 전 알파벳과 다르다면</span>
						<span class="n">temp</span><span class="o">=</span><span class="kc">false</span><span class="o">;</span> <span class="c1">//그룹 단어 아님</span>
						<span class="k">break</span><span class="o">;</span>
					<span class="o">}</span>
				<span class="o">}</span><span class="k">else</span> <span class="o">{</span> <span class="c1">//이미 나온 알파벳 아님</span>
					<span class="n">check</span><span class="o">[</span><span class="n">index</span><span class="o">]=</span><span class="kc">true</span><span class="o">;</span>
				<span class="o">}</span>
			<span class="o">}</span>
            <span class="c1">//다해서 temp가 true면 그룹단어 맞음</span>
			<span class="k">if</span><span class="o">(</span><span class="n">temp</span><span class="o">)</span> <span class="n">cnt</span><span class="o">++;</span>
		<span class="o">}</span>
		<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">cnt</span><span class="o">);</span>
	<span class="o">}</span>
<span class="o">}</span>
	
</code></pre></div></div>

<ul>
  <li>나에게는 더 직관적으로 이해가 잘되었던 방법이다.</li>
</ul>

<p><br />
Reference:</p>
<ul>
  <li><a href="https://notefolio.net/dexloper/130105">Algorithm -알고리즘 그래픽 디자인 img_최형주</a></li>
  <li><a href="https://st-lab.tistory.com/69">[백준] 1316번 : 그룹 단어 체커 - JAVA [자바]_st-lab</a></li>
  <li><a href="https://cocoon1787.tistory.com/613">[JAVA] 백준 1316번 - 그룹 단어 체커_cocoon1787</a></li>
  <li><a href="https://hellodoor.tistory.com/86">2941 크로아티아 알파벳_졸린코딩</a></li>
  <li><a href="https://st-lab.tistory.com/66">[백준] 2908번 : 상수 - JAVA [자바]_st-lab</a></li>
  <li>st-lab님 감사합니다! 블로그 덕분에 잘 배우고 있어요!</li>
</ul>
:ET