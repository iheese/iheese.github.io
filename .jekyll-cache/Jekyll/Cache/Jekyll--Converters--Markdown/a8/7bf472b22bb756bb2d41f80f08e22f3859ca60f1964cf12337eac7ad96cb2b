I"+R<p>*모든 실습은 eclipse에서 진행되고 있습니다.</p>

<h2 id="자바-웹-어플리케이션의-폴더-구조">자바 웹 어플리케이션의 폴더 구조</h2>
<p><img src="/img/posts/servlet/javaweb.png" alt="자바 웹 어플리케이션의 구조" width="700" height="300" /></p>

<h2 id="servlet서블릿">Servlet(서블릿)</h2>
<ul>
  <li>자바를 사용하여 웹페이지를 동적으로 생성하는 서버측 프로그램</li>
  <li>웹 서버의 성능을 향상하기 위해 사용된다.</li>
  <li>JSP(Java Server Page)와 비슷하지만 JSP는 HTML 문서 안에 Java 코드를 포함, 서블릿은 Java 코드 안에 HTML 문서를 포함하는 것이 큰 차이이다.</li>
</ul>

<p><br /></p>

<h2 id="servlet-작성-방법">Servlet 작성 방법</h2>
<p>1 . Servlet 3.0 spec 이상에서 사용하는 방법</p>
<ul>
  <li>web.xml 파일 사용 안함</li>
  <li>자바 어노테이션(annontation)
    <blockquote>
      <p>*어노테이션(annontation): 자바에서 사용될 때의 어노테이션은 코드 사이에 주석처럼 쓰여서 특별한 의미, 기능을 수행하도록 하는 기술이다. 즉, 프로그램에게 추가적인 정보를 제공해주는 메타데이터(meta data: 데이터를 위한 데이터)라고 볼 수 있다.</p>
    </blockquote>
  </li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nd">@WebServlet</span><span class="o">(</span><span class="s">"/ten"</span><span class="o">)</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">TenServlet</span> <span class="kd">extends</span> <span class="nc">HttpServlet</span> <span class="o">{</span>
<span class="o">...</span>
<span class="o">}</span>
</code></pre></div></div>

<p>2 . Servlet 3.0 spec 미만에서 사용하는 방법</p>
<ul>
  <li>Servlet을 등록할 때 web.xml 파일에 등록한다.</li>
</ul>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="nt">&lt;servlet&gt;</span>
    <span class="nt">&lt;description&gt;&lt;/description&gt;</span>
    <span class="nt">&lt;display-name&gt;</span>TenServlet<span class="nt">&lt;/display-name&gt;</span>
    <span class="nt">&lt;servlet-name&gt;</span>TenServlet<span class="nt">&lt;/servlet-name&gt;</span>
    <span class="nt">&lt;servlet-class&gt;</span>exam.TenServlet<span class="nt">&lt;/servlet-class&gt;</span>
  <span class="nt">&lt;/servlet&gt;</span>
  <span class="nt">&lt;servlet-mapping&gt;</span>
    <span class="nt">&lt;servlet-name&gt;</span>TenServlet<span class="nt">&lt;/servlet-name&gt;</span>
    <span class="nt">&lt;url-pattern&gt;</span>/ten<span class="nt">&lt;/url-pattern&gt;</span>
  <span class="nt">&lt;/servlet-mapping&gt;</span>
</code></pre></div></div>
<ul>
  <li>url-pattern으로 접속하면 servlet-name이 일치하는지 확인(틀리면 404페이지)</li>
  <li>그 후 <code class="language-plaintext highlighter-rouge">&lt;servlet&gt;</code> 에서 servlet-name이 일치하는지 확인, servlet-clas 실행</li>
</ul>

<p><br /></p>

<h2 id="서블릿의-생명주기">서블릿의 생명주기</h2>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="nd">@WebServlet</span><span class="o">(</span><span class="s">"/LifecycleServlet"</span><span class="o">)</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">LifecycleServlet</span> <span class="kd">extends</span> <span class="nc">HttpServlet</span> <span class="o">{</span>
	<span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="kt">long</span> <span class="n">serialVersionUID</span> <span class="o">=</span> <span class="mi">1L</span><span class="o">;</span>
       
 
    <span class="kd">public</span> <span class="nf">LifecycleServlet</span><span class="o">()</span> <span class="o">{</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"LifecycleServlet 생성!!"</span><span class="o">);</span>
    <span class="o">}</span>

	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">init</span><span class="o">(</span><span class="nc">ServletConfig</span> <span class="n">config</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">ServletException</span> <span class="o">{</span>
		<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"init 호출!!"</span><span class="o">);</span>
	<span class="o">}</span>
    
	<span class="nd">@Override</span>
	<span class="kd">protected</span> <span class="kt">void</span> <span class="nf">doGet</span><span class="o">(</span><span class="nc">HttpServletRequest</span> <span class="n">request</span><span class="o">,</span> <span class="nc">HttpServletResponse</span> <span class="n">response</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">ServletException</span><span class="o">,</span> <span class="nc">IOException</span>
       <span class="o">{</span>
		<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"get 메소드 호출!!"</span><span class="o">);</span>		
	<span class="o">}</span>
    <span class="nd">@Override</span>
	<span class="kd">protected</span> <span class="kt">void</span> <span class="nf">doPost</span><span class="o">(</span><span class="nc">HttpServletRequest</span> <span class="n">request</span><span class="o">,</span> <span class="nc">HttpServletResponse</span> <span class="n">response</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">ServletException</span><span class="o">,</span> <span class="nc">IOException</span>
       <span class="o">{</span>
		<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"post 메소드 호출!!"</span><span class="o">);</span>		
	<span class="o">}</span>
	
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">destroy</span><span class="o">()</span> <span class="o">{</span> <span class="c1">//서블릿 소멸</span>
		<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"destroy 호출!!"</span><span class="o">);</span>
	<span class="o">}</span>


	
<span class="o">}</span>
</code></pre></div></div>

<ol>
  <li>요청이 오면, Servlet 클래스가 로딩되어 Servlet 객체 생성</li>
  <li>init() 메소드를 호출하여 Servlet 멤버변수 초기화</li>
  <li>service() 메소드를 호출해서 Servlet이 브라우저 요청 처리하게 함
    <blockquote>
      <ul>
        <li>service() 메소드는 특정 HTTP 요청을 처리하는 메소드(doGet(), doPost() 등)를 호출함</li>
        <li>어떤 요청이 올지 모르겠다 하면 service()를 사용할 수 있고, 들어올 요청에 따라 doGet(), doPost()을 오버라이딩하면 된다.</li>
      </ul>
    </blockquote>
  </li>
  <li>WAS가 종료되거나, 웹 어플리케이션이 새롭게 갱신될 경우 destroy() 메소드 실행</li>
</ol>

<blockquote>
  <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code> if (메모리에 없음){
   해당 서블릿 클래스를 메모리에 올림
   init() 메소드로 초기화
   }else{
    service() 메소드를 실행 
    }
</code></pre></div>  </div>

  <ul>
    <li>재갱신, 종료시 destroy() 메소드 실행</li>
    <li>Servlet 객체를 생성하고 초기화하는 작업은 비용이 많은 작업임, 다음 요청을 대비해 Servlet 객체를 메모리에 남겨둠</li>
  </ul>
</blockquote>

<p><br /></p>

<h4 id="request-response-객체">Request, Response 객체</h4>

<p><img src="/img/posts/servlet/reqres.png" alt="Request, Response 객체" width="800" height="300" /></p>

<ol>
  <li>서블릿은 클라이언트로부터 동적 페이지 처리 요청을 받는다.</li>
  <li>HttpServletRequest(요청할 때 가지고 있는 정보, request), HttpServletResponse(웹 브라우저에게 응답을 보낼 정보, response)를 바탕으로 로직을 처리한다.</li>
  <li>로직에 관한 응답을 클라이언트에게 보낸다.</li>
</ol>

<ul>
  <li>HttpServletRequest
    <blockquote>
      <ul>
        <li>헤더정보, 파라미터, 쿠키, URI, URL 등의 정보를 읽어들이는 메소드 포함</li>
        <li>Body의 Stream을 읽어 들이는 메소드들을 가지고 있다.
          <blockquote>
            <p>대표적인 메소드</p>
            <ul>
              <li>getParameter(“String”) : 사용자가 입력한 String 타입 파라미터를 리턴한다.</li>
              <li>getParameterValues(“String”) : 사용자가 입력한 String 타입 파라미터를 통해 전달된 여러 개의 값을 리턴한다.</li>
            </ul>
          </blockquote>
        </li>
      </ul>
    </blockquote>
  </li>
  <li>HttpServletResponse
    <blockquote>
      <ul>
        <li>WAS는 어떤 클라이언트가 요청을 보냈는지 알고 있고, 해당 클라이언트에게 응답을 보내기 위해 HttpServletResponse 객체를 생성하여 서블릿에게 전달한다.</li>
        <li>해당 응답 객체는 content type, 응답코드, 응답 메시지 등을 전송한다.
          <blockquote>
            <p>대표적인 메소드</p>
            <ul>
              <li>getWriter() :  html 파일을 생성하여 응답할 수 있다.</li>
              <li>setContentType(“text/html”) : 응답 파일 타입 설정할 수 있다.</li>
            </ul>
          </blockquote>
        </li>
      </ul>
    </blockquote>
  </li>
</ul>

<p><br /></p>

<ul>
  <li>사용 예시</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">protected</span> <span class="kt">void</span> <span class="nf">doGet</span><span class="o">(</span><span class="nc">HttpServletRequest</span> <span class="n">request</span><span class="o">,</span> <span class="nc">HttpServletResponse</span> <span class="n">response</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">ServletException</span><span class="o">,</span> <span class="nc">IOException</span> <span class="o">{</span>
		<span class="n">response</span><span class="o">.</span><span class="na">setContentType</span><span class="o">(</span><span class="s">"text/html"</span><span class="o">);</span>
		<span class="nc">PrintWriter</span> <span class="n">out</span> <span class="o">=</span> <span class="n">response</span><span class="o">.</span><span class="na">getWriter</span><span class="o">();</span>
		<span class="n">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"&lt;html&gt;"</span><span class="o">);</span>
		<span class="n">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"&lt;head&gt;&lt;title&gt;form&lt;/title&gt;&lt;/head&gt;"</span><span class="o">);</span>
		<span class="n">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"&lt;body&gt;"</span><span class="o">);</span>

		<span class="nc">Enumeration</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">headerNames</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="na">getHeaderNames</span><span class="o">();</span> <span class="c1">//헤더 이름 요청</span>
		<span class="k">while</span><span class="o">(</span><span class="n">headerNames</span><span class="o">.</span><span class="na">hasMoreElements</span><span class="o">())</span> <span class="o">{</span>
			<span class="nc">String</span> <span class="n">headerName</span> <span class="o">=</span> <span class="n">headerNames</span><span class="o">.</span><span class="na">nextElement</span><span class="o">();</span>
			<span class="nc">String</span> <span class="n">headerValue</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="na">getHeader</span><span class="o">(</span><span class="n">headerName</span><span class="o">);</span>
			<span class="n">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">headerName</span> <span class="o">+</span> <span class="s">" : "</span> <span class="o">+</span> <span class="n">headerValue</span> <span class="o">+</span> <span class="s">" &lt;br&gt; "</span><span class="o">);</span>
		<span class="o">}</span>		

		<span class="n">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"&lt;/body&gt;"</span><span class="o">);</span>
		<span class="n">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"&lt;/html&gt;"</span><span class="o">);</span>
	<span class="o">}</span>
    
</code></pre></div></div>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">protected</span> <span class="kt">void</span> <span class="nf">doGet</span><span class="o">(</span><span class="nc">HttpServletRequest</span> <span class="n">request</span><span class="o">,</span> <span class="nc">HttpServletResponse</span> <span class="n">response</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">ServletException</span><span class="o">,</span> <span class="nc">IOException</span> <span class="o">{</span>
		<span class="n">response</span><span class="o">.</span><span class="na">setContentType</span><span class="o">(</span><span class="s">"text/html"</span><span class="o">);</span>
		<span class="nc">PrintWriter</span> <span class="n">out</span> <span class="o">=</span> <span class="n">response</span><span class="o">.</span><span class="na">getWriter</span><span class="o">();</span>
		<span class="n">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"&lt;html&gt;"</span><span class="o">);</span>
		<span class="n">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"&lt;head&gt;&lt;title&gt;form&lt;/title&gt;&lt;/head&gt;"</span><span class="o">);</span>
		<span class="n">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"&lt;body&gt;"</span><span class="o">);</span>

		<span class="nc">String</span> <span class="n">name</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"name"</span><span class="o">);</span> <span class="c1">//파라미터로 이름 요청</span>
		<span class="nc">String</span> <span class="n">age</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"age"</span><span class="o">);</span> <span class="c1">//파라미터로 나이 요청</span>
		
		<span class="n">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"name : "</span> <span class="o">+</span> <span class="n">name</span> <span class="o">+</span> <span class="s">"&lt;br&gt;"</span><span class="o">);</span>
		<span class="n">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"age : "</span> <span class="o">+</span><span class="n">age</span> <span class="o">+</span> <span class="s">"&lt;br&gt;"</span><span class="o">);</span>
        <span class="n">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"&lt;/body&gt;"</span><span class="o">);</span>
		<span class="n">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"&lt;/html&gt;"</span><span class="o">);</span>
	<span class="o">}</span>
</code></pre></div></div>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">protected</span> <span class="kt">void</span> <span class="nf">doGet</span><span class="o">(</span><span class="nc">HttpServletRequest</span> <span class="n">request</span><span class="o">,</span> <span class="nc">HttpServletResponse</span> <span class="n">response</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">ServletException</span><span class="o">,</span> <span class="nc">IOException</span> <span class="o">{</span>
		<span class="n">response</span><span class="o">.</span><span class="na">setContentType</span><span class="o">(</span><span class="s">"text/html"</span><span class="o">);</span>
		<span class="nc">PrintWriter</span> <span class="n">out</span> <span class="o">=</span> <span class="n">response</span><span class="o">.</span><span class="na">getWriter</span><span class="o">();</span>
		<span class="n">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"&lt;html&gt;"</span><span class="o">);</span>
		<span class="n">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"&lt;head&gt;&lt;title&gt;info&lt;/title&gt;&lt;/head&gt;"</span><span class="o">);</span>
		<span class="n">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"&lt;body&gt;"</span><span class="o">);</span>

		<span class="nc">String</span> <span class="n">uri</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="na">getRequestURI</span><span class="o">();</span> <span class="c1">//URI 요청</span>
		<span class="nc">StringBuffer</span> <span class="n">url</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="na">getRequestURL</span><span class="o">();</span> <span class="c1">//URL 요청</span>
		<span class="nc">String</span> <span class="n">contentPath</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="na">getContextPath</span><span class="o">();</span>  <span class="c1">//ContextPath 요청</span>
		<span class="nc">String</span> <span class="n">remoteAddr</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="na">getRemoteAddr</span><span class="o">();</span> <span class="c1">//주소 요청</span>


		<span class="n">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"uri : "</span> <span class="o">+</span> <span class="n">uri</span> <span class="o">+</span> <span class="s">"&lt;br&gt;"</span><span class="o">);</span>
		<span class="n">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"url : "</span> <span class="o">+</span> <span class="n">url</span> <span class="o">+</span> <span class="s">"&lt;br&gt;"</span><span class="o">);</span>
		<span class="n">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"contentPath : "</span> <span class="o">+</span> <span class="n">contentPath</span> <span class="o">+</span> <span class="s">"&lt;br&gt;"</span><span class="o">);</span>
		<span class="n">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"remoteAddr : "</span> <span class="o">+</span> <span class="n">remoteAddr</span> <span class="o">+</span> <span class="s">"&lt;br&gt;"</span><span class="o">);</span>
		
		<span class="n">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"&lt;/body&gt;"</span><span class="o">);</span>
		<span class="n">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"&lt;/html&gt;"</span><span class="o">);</span>
	<span class="o">}</span>

</code></pre></div></div>

<p><br />
Reference:</p>
<ul>
  <li>웹 프로그래밍(풀스택)_부스트코스 과정을 학습하고 정리한 내용입니다.</li>
  <li><a href="https://honeyinfo7.tistory.com/56">자바 어노테이션(annontation)_태샤릉</a></li>
  <li><a href="https://victorydntmd.tistory.com/154">서블릿 생명 주기_victolee</a></li>
</ul>
:ET